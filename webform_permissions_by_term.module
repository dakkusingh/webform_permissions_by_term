<?php

/**
 * @file
 * Contains webform_location_provider_element.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * {@inheritdoc}
 */
function webform_permissions_by_term_form_webform_settings_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  /* @var \Drupal\webform\WebformEntitySettingsForm $webform_settings_form
   * @var \Drupal\webform\WebformInterface $webform $webform */
  // Get the settings from the webform config entity.
  $webform_settings_form = $form_state->getFormObject();
  $webform = $webform_settings_form->getEntity();
  $webform_permissions_by_term_settings = $webform->getSetting('webform_permissions_by_term');

  // Get the default settings.
  $settings = webform_permissions_by_term_get_default_settings();
  // Loop through any settings set already and populate them.
  if (!empty($webform_permissions_by_term_settings)) {
    foreach ($webform_permissions_by_term_settings as $setting_name => $value) {
      $settings[$setting_name] = $value;
    }
  }

  // Add the twisty for wpbt.
  $form['webform_permissions_by_term'] = [
    '#type' => 'details',
    '#title' => 'Webform Permissions by Term',
    '#tree' => TRUE,
    '#weight' => -100,
  ];

  // Add the checkbox to enable/disable the security on this webform.
  $form['webform_permissions_by_term']['enable_webform_permissions_by_term'] = [
    '#type' => 'checkbox',
    '#title' => 'Enable Webform permissions by term',
    '#description' => 'If checked, this form will be secured by Taxonomy vocabulary.',
    '#return_value' => TRUE,
    '#default_value' => $settings['enable_webform_permissions_by_term'],
  ];
}

/**
 * Get default settings for webform permissions by term.
 */
function webform_permissions_by_term_get_default_settings() {
  return [
    'enable_webform_permissions_by_term' => 0,
  ];
}

/**
 * Implements hook_webform_submission_form_alter().
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function webform_permissions_by_term_webform_submission_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  if(!is_webform_secured_by_term($form_state)) return;

 // echo 'webform_permissions_by_term_' . get_webform_secured_by_term_vocab_machine_name();

  if(does_webform_have_vocab_element($form_state)) {
    exit(0);
  }

}

function is_webform_secured_by_term(FormStateInterface $form_state){
  /* @var \Drupal\webform\WebformEntityForm $webform_settings_form
   * @var \Drupal\webform\Entity\Webform $webform $webform */
  // Get the settings from the webform config entity.

  $webform_settings_form = $form_state->getFormObject();
  $webform = $webform_settings_form->getEntity()->getWebform();

  $webform_permissions_by_term_settings = $webform->getSetting('webform_permissions_by_term');
  if(!empty($webform_permissions_by_term_settings)){
    if($webform_permissions_by_term_settings['enable_webform_permissions_by_term']) {
      return TRUE;
    }
  }
  return FALSE;
}

function does_webform_have_vocab_element(FormStateInterface $form_state){
  return $form_state->has('webform_permissions_by_term_' . get_webform_secured_by_term_vocab_machine_name());
}

function get_webform_secured_by_term_vocab_machine_name(){
  $name = \Drupal::config('webform_permissions_by_term.settings.webform_permissions_by_term_vocab')->get('value');
  $name = strtolower($name);
  $name = str_replace(' ', '_', $name);
  return $name;
}